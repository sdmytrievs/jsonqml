name: CIbuild
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            build_dir: build-linux
            conda_platform: linux-64
            artifact_name: jsonqml-linux
          - os: windows-latest
            build_dir: build-windows
            conda_platform: win-64
            artifact_name: jsonqml-windows.zip
          - os: macos-latest
            build_dir: build-macos
            conda_platform: osx-64
            artifact_name: jsonqml-macos.dmg

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: >
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,defaults
          channel-priority: true
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set true for caching of miniconda packages to work properly!

      - name: Configuring Conda Environment
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install conda-devenv
          conda devenv

      - name: Building, Testing & Installing jsonqml
        if: matrix.os != 'windows-latest'
        shell: bash -l {0}
        run: |
          source activate jsonqml
          ./conda-install-dependencies.sh
          mkdir .build && cd .build
          cmake -GNinja .. -DCMAKE_BUILD_TYPE=Release
          ninja
          ninja install

      - name: Building, Testing & Installing jsonqml (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          call conda activate jsonqml || goto :eof
          ./conda-install-dependencies.bat || goto :eof
          mkdir .build && cd .build || goto :eof
          cmake -GNinja .. -DCMAKE_BUILD_TYPE=${{ matrix.config }} || goto :eof
          ninja || goto :eof
          ninja install || goto :eof

    - name: Check conda
      run: |
        conda list

